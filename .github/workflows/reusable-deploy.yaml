# File: .github/workflows/reusable-deploy.yml
# Repository: repo2 (reusable workflow repository)

name: Reusable Deployment Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Target environment'
      message:
        required: true
        type: string
        description: 'Deployment message'
      timestamp:
        required: true
        type: string
        description: 'Deployment timestamp'
    secrets:
      DEPLOY_TOKEN:
        required: true
      NOTIFICATION_WEBHOOK:
        required: false

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      deploy_ready: ${{ steps.validation.outputs.deploy_ready }}
    steps:
      - name: Validate inputs
        id: validation
        run: |
          echo "Validating deployment parameters..."
          echo "- Environment: ${{ inputs.environment }}"
          echo "- Message: ${{ inputs.message }}"
          echo "- Timestamp: ${{ inputs.timestamp }}"
          
          # Simple validation
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
            echo "Production deployment requires extra validation"
            echo "deploy_ready=true" >> $GITHUB_OUTPUT
          else
            echo "Non-production deployment validated"
            echo "deploy_ready=true" >> $GITHUB_OUTPUT
          fi

  send-notification:
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.deploy_ready == 'true'
    steps:
      - name: Send deployment notification
        run: |
          echo "🚀 Sending deployment notification..."
          echo "Environment: ${{ inputs.environment }}"
          echo "Message: ${{ inputs.message }}"
          echo "Timestamp: ${{ inputs.timestamp }}"
          
          # Simulate sending notification (replace with actual webhook call)
          if [[ -n "${{ secrets.NOTIFICATION_WEBHOOK }}" ]]; then
            echo "Notification sent to webhook"
          else
            echo "No webhook configured, skipping notification"
          fi
          
          echo "## Deployment Notification Sent" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Ready for approval" >> $GITHUB_STEP_SUMMARY
          echo "- **Action Required**: Approve the deployment in GitHub" >> $GITHUB_STEP_SUMMARY

  # This job will trigger the environment protection rule
  deploy:
    runs-on: ubuntu-latest
    needs: [validate, send-notification]
    # THIS LINE TRIGGERS THE PROTECTION RULE IN REPO1
    environment: deploy-${{ inputs.environment }}
    if: needs.validate.outputs.deploy_ready == 'true'
    steps:
      - name: Pre-deployment check
        run: |
          echo "🔍 Pre-deployment checks..."
          echo "Environment: ${{ inputs.environment }}"
          echo "Deploy token available: ${{ secrets.DEPLOY_TOKEN != '' }}"
          
      - name: Deploy to environment
        run: |
          echo "🚀 Deploying to ${{ inputs.environment }} environment..."
          echo "Message: ${{ inputs.message }}"
          echo "Timestamp: ${{ inputs.timestamp }}"
          
          # Simulate deployment steps
          echo "Step 1: Pulling latest code..."
          sleep 2
          echo "Step 2: Running tests..."
          sleep 2
          echo "Step 3: Building application..."
          sleep 3
          echo "Step 4: Deploying to ${{ inputs.environment }}..."
          sleep 2
          echo "✅ Deployment completed successfully!"
          
      - name: Post-deployment summary
        run: |
          echo "## 🎉 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Successful" >> $GITHUB_STEP_SUMMARY
          echo "- **Message**: ${{ inputs.message }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Completed At**: $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "- **Deploy Token Used**: ${{ secrets.DEPLOY_TOKEN != '' }}" >> $GITHUB_STEP_SUMMARY
